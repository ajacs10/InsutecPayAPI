import React from 'react';
import { View, Text, TouchableOpacity, Alert, Switch } from 'react-native';
import { FontAwesome } from '@expo/vector-icons';
import { router } from 'expo-router';
// ðŸ›‘ Assumindo que useAuth tem signOut renomeado para logout
import { useAuth } from '../../../components/AuthContext'; 
import { useTheme } from '../ThemeContext/ThemeContext';
// ðŸ›‘ Assumindo que _Perfil.styles.ts exporta styles e COLORS
import { styles, COLORS } from '../../../styles/_Perfil.styles.ts'; 

export default function PerfilScreen() {
Â  Â  // âœ… O uso de useTheme aqui garante a mudanÃ§a global do tema
Â  Â  const { aluno, signOut: logout } = useAuth(); // Usando signOut, renomeando para logout
Â  Â  const { isDarkMode, toggleTheme } = useTheme(); 

Â  Â  // FunÃ§Ã£o auxiliar para obter as iniciais do nome para o Avatar
Â  Â  const getInitials = (name: string | undefined): string => {
Â  Â  Â  Â  if (!name) return '?';
Â  Â  Â  Â  const parts = name.split(' ');
Â  Â  Â  Â  if (parts.length >= 2) {
Â  Â  Â  Â  Â  Â  return (parts[0][0] + parts[parts.length - 1][0]).toUpperCase();
Â  Â  Â  Â  }
Â  Â  Â  Â  return parts[0][0].toUpperCase();
Â  Â  };

Â  Â  /**
Â  Â  Â * ConfirmaÃ§Ã£o e execuÃ§Ã£o do Logout.
Â  Â  Â */
Â  Â  const handleLogout = () => {
Â  Â  Â  Â  Alert.alert(
Â  Â  Â  Â  Â  Â  "Terminar SessÃ£o",
Â  Â  Â  Â  Â  Â  "Tem certeza que deseja sair da sua conta?",
Â  Â  Â  Â  Â  Â  [
Â  Â  Â  Â  Â  Â  Â  Â  { text: "Cancelar", style: "cancel" },
Â  Â  Â  Â  Â  Â  Â  Â  {Â 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  text: "Sair",Â 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onPress: () => {
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  logout();
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  // âœ… CORREÃ‡ÃƒO: Usar a rota completa para o ecrÃ£ de Login
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  router.replace('/telas/login/LoginScreen'); 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  },
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  style: 'destructive'
Â  Â  Â  Â  Â  Â  Â  Â  }
Â  Â  Â  Â  Â  Â  ]
Â  Â  Â  Â  );
Â  Â  };

Â  Â  if (!aluno) {
Â  Â  Â  Â  return (
Â  Â  Â  Â  Â  Â  <View style={styles.container(isDarkMode)}>
Â  Â  Â  Â  Â  Â  Â  Â  <Text style={styles.errorText(isDarkMode)}>Erro: Dados do aluno nÃ£o carregados.</Text>
Â  Â  Â  Â  Â  Â  Â  Â  <TouchableOpacity onPress={() => router.replace('/telas/login/LoginScreen')} style={styles.linkButton}>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Text style={styles.linkText(isDarkMode)}>Ir para Login</Text>
Â  Â  Â  Â  Â  Â  Â  Â  </TouchableOpacity>
Â  Â  Â  Â  Â  Â  </View>
Â  Â  Â  Â  );
Â  Â  }

Â  Â  return (
Â  Â  Â  Â  <View style={styles.container(isDarkMode)}>
Â  Â  Â  Â  Â  Â  <View style={styles.profileCard(isDarkMode)}>
Â  Â  Â  Â  Â  Â  Â  Â  <View style={styles.avatar(isDarkMode)}>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Text style={styles.avatarText(isDarkMode)}>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {getInitials(aluno.nome)}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </Text>
Â  Â  Â  Â  Â  Â  Â  Â  </View>
Â  Â  Â  Â  Â  Â  Â  Â  <Text style={styles.nameText(isDarkMode)}>{aluno.nome}</Text>
Â  Â  Â  Â  Â  Â  Â  Â  <Text style={styles.studentNumberText(isDarkMode)}>NÂº de Estudante: {aluno.nr_estudante}</Text>
Â  Â  Â  Â  Â  Â  Â  Â  <View style={styles.infoBlock(isDarkMode)}>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Text style={styles.infoTitle(isDarkMode)}>InformaÃ§Ã£o de Contacto</Text>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Text style={styles.infoDetail(isDarkMode)}>Email: {aluno.nr_estudante}@insutec.co.ao</Text>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Text style={styles.infoDetail(isDarkMode)}>Curso: Engenharia InformÃ¡tica</Text>
Â  Â  Â  Â  Â  Â  Â  Â  </View>
Â  Â  Â  Â  Â  Â  </View>
Â  Â  Â  Â  Â  Â  <View style={styles.toggleContainer}>
Â  Â  Â  Â  Â  Â  Â  Â  <Text style={styles.label(isDarkMode)}>Modo Escuro</Text>
Â  Â  Â  Â  Â  Â  Â  Â  <Switch
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onValueChange={toggleTheme} // âœ… Esta funÃ§Ã£o garante a mudanÃ§a global
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  value={isDarkMode}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  trackColor={{ false: '#CCCCCC', true: '#00CC00' }}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  thumbColor={isDarkMode ? '#00FF00' : '#FFFFFF'}
Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  </View>
Â  Â  Â  Â  Â  Â  <TouchableOpacityÂ 
Â  Â  Â  Â  Â  Â  Â  Â  style={styles.logoutButton(isDarkMode)}
Â  Â  Â  Â  Â  Â  Â  Â  onPress={handleLogout}
Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  <Text style={styles.logoutButtonText(isDarkMode)}>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Terminar SessÃ£o (Logout)
Â  Â  Â  Â  Â  Â  Â  Â  </Text>
Â  Â  Â  Â  Â  Â  </TouchableOpacity>
Â  Â  Â  Â  Â  Â  <View style={styles.statusContainer(isDarkMode)}>
Â  Â  Â  Â  Â  Â  Â  Â  <FontAwesome name="check-circle" size={16} color={COLORS.primary} /> {/* Using restored COLORS.primary */}
Â  Â  Â  Â  Â  Â  Â  Â  <Text style={styles.statusText(isDarkMode)}>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  SessÃ£o segura e autenticada.
Â  Â  Â  Â  Â  Â  Â  Â  </Text>
Â  Â  Â  Â  Â  Â  </View>
Â  Â  Â  Â  </View>
Â  Â  );
}

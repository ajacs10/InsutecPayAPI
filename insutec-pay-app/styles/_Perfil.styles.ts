import { StyleSheet, Platform } from 'react-native';

// Paleta de cores local (ajustada para o tema neon)
// ðŸ’¥ CORREÃ‡ÃƒO AQUI: 'export' adicionado para que PerfilScreen possa aceder a COLORS
export const COLORS = { 
Â  primary: '#00FF00', // Neon green
Â  lightBackground: '#f8f9fa',
Â  darkBackground: '#2E2E2E',
Â  textDark: '#333',
Â  textLight: '#fff',
Â  primaryDark: '#00CC00',
Â  accent: '#00FFFF',
Â  cardBackground: '#3A3A3A',
Â  success: '#00FF00',
Â  danger: '#FF3333',
Â  warning: '#FFCC00',
Â  secondary: '#00FFFF',
Â  text: '#E0E0E0',
Â  subText: '#AAAAAA',
Â  white: '#FFFFFF',
Â  gray: '#666666',
Â  error: '#FF3333',
};

export const styles = StyleSheet.create({
Â  container: (isDarkMode: boolean) => ({
Â  Â  flex: 1,
Â  Â  padding: 20,
Â  Â  backgroundColor: isDarkMode ? COLORS.darkBackground : COLORS.lightBackground,
Â  Â  justifyContent: 'center',
Â  Â  alignItems: 'center',
Â  }),
Â  profileCard: (isDarkMode: boolean) => ({
Â  Â  backgroundColor: isDarkMode ? COLORS.cardBackground : '#FFFFFF',
Â  Â  padding: 20,
Â  Â  borderRadius: 10,
Â  Â  width: '90%',
Â  Â  alignItems: 'center',
Â  Â  shadowColor: '#000',
Â  Â  shadowOffset: { width: 0, height: 2 },
Â  Â  shadowOpacity: 0.3,
Â  Â  shadowRadius: 4,
Â  Â  elevation: Platform.OS === 'android' ? 2 : 0,
Â  }),
Â  avatar: (isDarkMode: boolean) => ({
Â  Â  width: 80,
Â  Â  height: 80,
Â  Â  borderRadius: 40,
Â  Â  backgroundColor: isDarkMode ? '#454545' : '#E8E8E8',
Â  Â  justifyContent: 'center',
Â  Â  alignItems: 'center',
Â  Â  marginBottom: 15,
Â  Â  borderWidth: 2,
Â  Â  borderColor: isDarkMode ? COLORS.gray : '#CCCCCC',
Â  }),
Â  avatarText: (isDarkMode: boolean) => ({
Â  Â  // Corrigido para usar cores que se destaquem no avatar, baseado na paleta
Â  Â  fontSize: 32,
Â  Â  color: isDarkMode ? COLORS.white : COLORS.textDark, 
Â  Â  fontWeight: 'bold',
Â  }),
Â  nameText: (isDarkMode: boolean) => ({
Â  Â  fontSize: 24,
Â  Â  fontWeight: 'bold',
Â  Â  // Corrigido para usar cores de texto apropriadas para fundo claro/escuro
Â  Â  color: isDarkMode ? COLORS.text : COLORS.textDark, 
Â  Â  marginBottom: 5,
Â  }),
Â  studentNumberText: (isDarkMode: boolean) => ({
Â  Â  fontSize: 16,
Â  Â  // Corrigido para usar cores de subtexto
Â  Â  color: isDarkMode ? COLORS.subText : COLORS.gray, 
Â  Â  marginBottom: 15,
Â  }),
Â  infoBlock: (isDarkMode: boolean) => ({
Â  Â  width: '100%',
Â  Â  marginTop: 15,
Â  Â  padding: 10,
Â  Â  // Usa darkBackground em vez de um cÃ³digo rÃ­gido
Â  Â  backgroundColor: isDarkMode ? COLORS.darkBackground : '#F0F0F0', 
Â  Â  borderRadius: 8,
Â  }),
Â  infoTitle: (isDarkMode: boolean) => ({
Â  Â  fontSize: 18,
Â  Â  fontWeight: '600',
Â  Â  color: isDarkMode ? COLORS.primary : COLORS.primaryDark,
Â  Â  marginBottom: 10,
Â  }),
Â  infoDetail: (isDarkMode: boolean) => ({
Â  Â  fontSize: 14,
Â  Â  // Corrigido: usa cores definidas
Â  Â  color: isDarkMode ? COLORS.text : COLORS.textDark, 
Â  Â  marginBottom: 5,
Â  }),
Â  toggleContainer: {
Â  Â  flexDirection: 'row',
Â  Â  alignItems: 'center',
Â  Â  justifyContent: 'space-between',
Â  Â  marginTop: 20,
Â  Â  width: '90%',
Â  },
Â  label: (isDarkMode: boolean) => ({
Â  Â  fontSize: 16,
Â  Â  fontWeight: '600',
Â  Â  // Corrigido: usa cores definidas
Â  Â  color: isDarkMode ? COLORS.text : COLORS.textDark, 
Â  }),
Â  logoutButton: (isDarkMode: boolean) => ({
Â  Â  backgroundColor: isDarkMode ? COLORS.danger : '#FF6666',
Â  Â  padding: 12,
Â  Â  borderRadius: 8,
Â  Â  width: '90%',
Â  Â  alignItems: 'center',
Â  Â  marginTop: 20,
Â  Â  shadowColor: '#000',
Â  Â  shadowOffset: { width: 0, height: 2 },
Â  Â  shadowOpacity: 0.3,
Â  Â  shadowRadius: 4,
Â  Â  elevation: Platform.OS === 'android' ? 2 : 0,
Â  }),
Â  logoutButtonText: (isDarkMode: boolean) => ({
Â  Â  color: COLORS.white,
Â  Â  fontSize: 16,
Â  Â  fontWeight: '600',
Â  }),
Â  errorText: (isDarkMode: boolean) => ({
Â  Â  color: COLORS.error,
Â  Â  fontSize: 18,
Â  Â  textAlign: 'center',
Â  }),
Â  linkButton: {
Â  Â  marginTop: 20,
Â  },
Â  linkText: (isDarkMode: boolean) => ({
Â  Â  color: COLORS.primary,
Â  Â  fontSize: 16,
Â  Â  textAlign: 'center',
Â  }),
Â  statusContainer: (isDarkMode: boolean) => ({
Â  Â  marginTop: 20,
Â  Â  flexDirection: 'row',
Â  Â  alignItems: 'center',
Â  }),
Â  statusText: (isDarkMode: boolean) => ({
Â  Â  // Corrigido: usa cores definidas
Â  Â  color: isDarkMode ? COLORS.subText : COLORS.gray, 
Â  Â  marginLeft: 8,
Â  Â  fontSize: 14,
Â  }),
});
